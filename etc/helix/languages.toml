# Dependencies:
#   ltex-ls
#   snippets-ls (https://github.com/quantonganh/snippets-ls)


# https://github.com/helix-editor/helix/blob/master/languages.toml


[language-server.ltex-ls]
command = "ltex-ls"

[language-server.snippets-ls-py]
# Requires snippets-ls:
# https://github.com/quantonganh/snippets-ls
# https://code.visualstudio.com/docs/editor/userdefinedsnippets
command = "snippets-ls"
args = ["-config", "/home/daniel/code/etc/helix/py-snippets.json"]

[language-server.snippets-ls-md]
command = "snippets-ls"
args = ["-config", "/home/daniel/code/etc/helix/md-snippets.json"]

[language-server.r]
# R language server uses lintr as its backend. Configuring lintr can be done
# by editing ~/.lintr which uses DCF format
# (https://stat.ethz.ch/R-manual/R-devel/library/base/html/dcf.html)
# For .lintr config options, see:
# https://lintr.r-lib.org/articles/lintr.html
command = "R"
args = [
  "--no-echo",
  "-e",
  # https://github.com/REditorSupport/languageserver?tab=readme-ov-file#settings
  """
    # Config language server
    #options(config.option = value);

    # Run language server
    languageserver::run();
  """,
]

[[language]]
name = "markdown"
scope = "source.md"
# scope = "text.markdown"
injection-regex = "md|markdown"
file-types = [
  "md", "markdown", "mdx", "mkd", "mkdn", "mdwn", "mdown", "markdn", "mdtxt",
  "mdtext", "workbook", { glob = "PULLREQ_EDITMSG" },
]
roots = [".marksman.toml"]
language-servers = [ "marksman", "markdown-oxide" ]
# language-servers = [
  # "snippets-ls-md"
#  { name = "ltex-ls" }
# ]
indent = { tab-width = 2, unit = "  " }
text-width = 79
block-comment-tokens = { start = "<!--", end = "-->" }

[[language]]
name = "python"
scope = "source.python"
injection-regex = "py(thon)?"
file-types = [
  "py", "pyi", "py3", "pyw", "ptl", "rpy", "cpy", "ipy", "pyt",
  { glob = ".python_history" }, { glob = ".pythonstartup" },
  { glob = ".pythonrc" }, { glob = "SConstruct" }, { glob = "SConscript" },
]
shebangs = ["python"]
roots = ["pyproject.toml", "setup.py", "poetry.lock", "pyrightconfig.json"]
indent = { tab-width = 4, unit = "    " }
text-width = 79

[language-server.ruff.config]
settings = { showSyntaxErrors = false}

[[language]]
name = "r"
scope = "source.r"
injection-regex = "(r|R)"
file-types = [
  "r", "R",
  { glob = ".Rprofile" }, { glob = "Rprofile.site" }, { glob = ".RHistory" }
]
shebangs = ["r", "R", "Rscript"]
indent = { tab-width = 4, unit = "    " }
text-width = 79
language-servers = ["r"]

[[language]]
name = "yaml"
scope = "source.yaml"
file-types = ["yml", "yaml"]
indent = { tab-width = 2, unit = "  " }
language-servers = [ "yaml-language-server", "ansible-language-server" ]
injection-regex = "yml|yaml"

[[language]]
name = "bash"
scope = "source.bash"
injection-regex = "(shell|bash|zsh|sh)"
file-types = [
  "sh", "bash", "ash", "dash", "ksh", "mksh", "zsh", "zshenv", "zlogin",
  "zlogout", "zprofile", "zshrc", "eclass", "ebuild", "bazelrc", "Renviron",
  "zsh-theme", "cshrc",   "tcshrc", "bashrc_Apple_Terminal", 
  "zshrc_Apple_Terminal", { glob = "i3/config" }, { glob = "sway/config" },
  { glob = "tmux.conf" }, { glob = ".bash_history" }, { glob = ".bash_login" },
  { glob = ".bash_logout" }, { glob = ".bash_profile" }, { glob = ".bashrc" },
  { glob = ".profile" }, { glob = ".zshenv" }, { glob = ".zlogin" },
  { glob = ".zlogout" }, { glob = ".zprofile" }, { glob = ".zshrc" },
  { glob = ".zimrc" }, { glob = "APKBUILD" }, { glob = ".bash_aliases" },
  { glob = ".Renviron" }, { glob = ".xprofile" },
  { glob = ".xsession" }, { glob = ".xsessionrc" }, { glob = ".yashrc" },
  { glob = ".yash_profile" }, { glob = ".hushlogin" },
]
shebangs = ["sh", "bash", "dash", "zsh"]
# language-servers = [ "bash-language-server" ]
language-servers = []  # disable bash-language-server (because it uses Node.js)
indent = { tab-width = 4, unit = "    " }
text-width = 79
