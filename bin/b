#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Name: BTRFS Snapshot
# Author: Daniel Rode
# Created: 10 Oct 2025
# Updated: 25 Oct 2025


# Create BTRFS snapshots

# NOTE:
# btrfs subvolume create ~/.snapshots  # Create sub-vol for snapshots
#
# NOTE: Exclude ~/downloads and ~/.cache from ~/ snapshots (by making them
# their own subvolumes)


import json
import subprocess as sp
from pathlib import Path
from datetime import datetime


DEFAULT_SET = (
    Path.home(),
)


def timestamp() -> str:
    return datetime.now().strftime('%Y-%m-%d-%H%M%S')


def ls_btrfs(exclusions=['/', '/home']) -> list[Path]:
    cmd = (
        'findmnt',
        '--list',
        '--noheadings',
        '--types', 'btrfs',
        '--output', 'TARGET',
        '--json',
    )
    p = sp.run(cmd, check=True, text=True, capture_output=True)

    return [
        Path(i['target'])
        for i in json.loads(p.stdout)['filesystems']
        if i['target'] not in exclusions
    ]



# Create read-only BTRFS snapshots
for btrfs_subvol in (ls_btrfs() + [Path.home()]):
    # if not os.access(btrfs_subvol, os.W_OK | os.X_OK):
    #     continue
    if not (btrfs_subvol / '.snapshots').exists():
        continue
    cmd = (
        'btrfs',
        'subvolume',
        'snapshot',
        '-r',  # Make snapshot read-only
        str(btrfs_subvol),
        str(Path(btrfs_subvol, '.snapshots', f"@snapshot-{timestamp()}")),
    )
    sp.run(cmd, check=True)
