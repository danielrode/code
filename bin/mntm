#!/usr/bin/env python3
# Author: Daniel Rode
# Name: Mount Menu
# Dependencies:
#   udisks2
#   lf
# Version: 7
# Created: 12 Apr 2020
# Updated: 18 Jun 2025


import io
import csv
import json
import subprocess as sp
from pathlib import Path


def lsblk() -> None:
    cmd = (
        'lsblk',
        '--output',
        'NAME,FSTYPE,SIZE,FSUSE%,LABEL,MOUNTPOINTS',
        '--list',
        '--paths',
        '--json',
    )
    p = sp.run(cmd, check=True, capture_output=True, text=True)

    return json.loads(p.stdout)['blockdevices']

def lsblk_json2csv(lsblk_json: list[dict]) -> str:
    with io.StringIO() as f:
        writer = csv.DictWriter(
            f,
            fieldnames=parts[0].keys(),
            lineterminator='\n',
        )
        writer.writeheader()
        writer.writerows(parts)

        return f.getvalue()

def csv2fixed(csv: str) -> str:
    """Convert a CSV to fixed-width text format"""
    cmd = (
        'column',
        '--table',
        '--separator', ',',
    )
    p = sp.run(cmd, check=True, text=True, capture_output=True, input=csv)

    return p.stdout

def udisksctl(part_path: Path) -> (str, str):
    cmd = (
        'udisksctl', 'mount',
        '--block-device', str(part_path),
    )
    p = sp.run(cmd, check=True, capture_output=True, text=True)
    print(p.stdout)

    blk_dev, mnt_point, = (p
        .stdout
        .strip()
        .lstrip("Mounted ")
        .split(' at ', maxsplit=1)
    )

    return blk_dev, mnt_point


# Get list of partitions
parts = lsblk()
parts = list(filter(
    # Filter out /dev/ paths that are not partitions
    lambda x: x['fstype'] is not None,
    parts,
))

parts_csv = lsblk_json2csv(parts)
parts_fw = csv2fixed(parts_csv)

# Get user selections for which partition(s) to mount
cmd = (
    'fzf',
    # '--multi',
    '--header-lines', '1',
    '--bind', 'f5:become(mntm)',
    '--header', 'Press F5 to refresh the list',
)
p = sp.run(cmd, check=True, text=True, stdout=sp.PIPE, input=parts_fw)

# Mount partition
# # Mount partition(s)
# part_sel = [i.split(' ')[0] for i in p.stdout.strip().split('\n')]
# for part_path in part_sel:
#     udisksctl(part_path)
part_path = [i.split(' ')[0] for i in p.stdout.strip().split('\n')][0]
_, mnt_point = udisksctl(part_path)

# Open mounted partition in file manager
sp.run(['lf', mnt_point], check=True)

# Unmount partition
sp.run(['umount', mnt_point], check=True)
print("Unmounted:", mnt_point)
